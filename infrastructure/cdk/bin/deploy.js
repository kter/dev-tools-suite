#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const dev_tools_stack_1 = require("../lib/dev-tools-stack");
const certificate_stack_1 = require("../lib/certificate-stack");
const github_actions_stack_1 = require("../lib/github-actions-stack");
const multi_cloud_routing_stack_1 = require("../lib/multi-cloud-routing-stack");
const app = new cdk.App();
const environment = app.node.tryGetContext('environment') || 'dev';
const config = {
    dev: {
        domain: 'dev.devtools.site',
        hostedZoneId: 'Z10172453BI2WPR9N2H36',
        env: {
            region: 'ap-northeast-1'
        }
    },
    prd: {
        domain: 'devtools.site',
        hostedZoneId: 'Z07774093R2W7AB97P21C',
        env: {
            region: 'ap-northeast-1'
        }
    }
};
// Certificate stack in us-east-1 for CloudFront
const certificateStack = new certificate_stack_1.CertificateStack(app, `CertificateStack-${environment}`, {
    env: { region: 'us-east-1' },
    domain: config[environment].domain,
    hostedZoneId: config[environment].hostedZoneId
});
// Main stack with application resources
const devToolsStack = new dev_tools_stack_1.DevToolsStack(app, `DevToolsStack-${environment}`, {
    env: config[environment].env,
    domain: config[environment].domain,
    hostedZoneId: config[environment].hostedZoneId,
    certificateArn: certificateStack.certificate.certificateArn,
    environment,
    crossRegionReferences: true
});
devToolsStack.addDependency(certificateStack);
// GitHub Actions IAM Stack
const githubActionsStack = new github_actions_stack_1.GitHubActionsStack(app, `GitHubActionsStack-${environment}`, {
    env: config[environment].env,
    environment: environment,
    githubRepo: 'kter/dev-tools-suite'
});
// Multi-Cloud Routing Stack (conditional)
if (app.node.tryGetContext('deployMultiCloud') === 'true') {
    const firebaseHostingUrls = {
        'hash-generator': `devtools-hash-generator-${environment}.web.app`,
        'qr-generator': `devtools-qr-generator-${environment}.web.app`,
        'unix-time-converter': `devtools-unix-time-converter-${environment}.web.app`,
        'password-generator': `devtools-password-generator-${environment}.web.app`,
        'ip-calculator': `devtools-ip-calculator-${environment}.web.app`,
        'markdown-preview': `devtools-markdown-preview-${environment}.web.app`,
        'placeholder-generator': `devtools-placeholder-generator-${environment}.web.app`,
        'ip-info': `devtools-ip-info-${environment}.web.app`,
        'timezone-converter': `devtools-timezone-converter-${environment}.web.app`,
        'string-converter': `devtools-string-converter-${environment}.web.app`,
        'code-diff': `devtools-code-diff-${environment}.web.app`,
        'mic-test': `devtools-mic-test-${environment}.web.app`,
        'json-yaml-converter': `devtools-json-yaml-converter-${environment}.web.app`,
        'jwt-decoder': `devtools-jwt-decoder-${environment}.web.app`,
        'regex-tester': `devtools-regex-tester-${environment}.web.app`,
        'lorem-ipsum-generator': `devtools-lorem-ipsum-generator-${environment}.web.app`,
        'image-converter': `devtools-image-converter-${environment}.web.app`,
        'timer': `devtools-timer-${environment}.web.app`,
        'character-code-converter': `devtools-character-code-converter-${environment}.web.app`,
        'badger-image-generator': `devtools-badger-image-generator-${environment}.web.app`,
        'poster-splitter': `devtools-poster-splitter-${environment}.web.app`
    };
    const multiCloudStack = new multi_cloud_routing_stack_1.MultiCloudRoutingStack(app, `MultiCloudRoutingStack-${environment}`, {
        env: config[environment].env,
        domain: config[environment].domain,
        hostedZoneId: config[environment].hostedZoneId,
        environment,
        awsDistributions: devToolsStack.cloudFrontDistributions,
        firebaseHostingUrls,
        firebaseLandingUrl: `devtools-landing-page-${environment}.web.app`
    });
    multiCloudStack.addDependency(devToolsStack);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwbG95LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGVwbG95LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHVDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsNERBQXVEO0FBQ3ZELGdFQUE0RDtBQUM1RCxzRUFBaUU7QUFDakUsZ0ZBQTBFO0FBRTFFLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEtBQUssQ0FBQztBQUVuRSxNQUFNLE1BQU0sR0FBRztJQUNiLEdBQUcsRUFBRTtRQUNILE1BQU0sRUFBRSxtQkFBbUI7UUFDM0IsWUFBWSxFQUFFLHVCQUF1QjtRQUNyQyxHQUFHLEVBQUU7WUFDSCxNQUFNLEVBQUUsZ0JBQWdCO1NBQ3pCO0tBQ0Y7SUFDRCxHQUFHLEVBQUU7UUFDSCxNQUFNLEVBQUUsZUFBZTtRQUN2QixZQUFZLEVBQUUsdUJBQXVCO1FBQ3JDLEdBQUcsRUFBRTtZQUNILE1BQU0sRUFBRSxnQkFBZ0I7U0FDekI7S0FDRjtDQUNGLENBQUM7QUFFRixnREFBZ0Q7QUFDaEQsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLG9DQUFnQixDQUFDLEdBQUcsRUFBRSxvQkFBb0IsV0FBVyxFQUFFLEVBQUU7SUFDcEYsR0FBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRTtJQUM1QixNQUFNLEVBQUUsTUFBTSxDQUFDLFdBQWtDLENBQUMsQ0FBQyxNQUFNO0lBQ3pELFlBQVksRUFBRSxNQUFNLENBQUMsV0FBa0MsQ0FBQyxDQUFDLFlBQVk7Q0FDdEUsQ0FBQyxDQUFDO0FBRUgsd0NBQXdDO0FBQ3hDLE1BQU0sYUFBYSxHQUFHLElBQUksK0JBQWEsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLFdBQVcsRUFBRSxFQUFFO0lBQzNFLEdBQUcsRUFBRSxNQUFNLENBQUMsV0FBa0MsQ0FBQyxDQUFDLEdBQUc7SUFDbkQsTUFBTSxFQUFFLE1BQU0sQ0FBQyxXQUFrQyxDQUFDLENBQUMsTUFBTTtJQUN6RCxZQUFZLEVBQUUsTUFBTSxDQUFDLFdBQWtDLENBQUMsQ0FBQyxZQUFZO0lBQ3JFLGNBQWMsRUFBRSxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsY0FBYztJQUMzRCxXQUFXO0lBQ1gscUJBQXFCLEVBQUUsSUFBSTtDQUM1QixDQUFDLENBQUM7QUFFSCxhQUFhLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFFOUMsMkJBQTJCO0FBQzNCLE1BQU0sa0JBQWtCLEdBQUcsSUFBSSx5Q0FBa0IsQ0FBQyxHQUFHLEVBQUUsc0JBQXNCLFdBQVcsRUFBRSxFQUFFO0lBQzFGLEdBQUcsRUFBRSxNQUFNLENBQUMsV0FBa0MsQ0FBQyxDQUFDLEdBQUc7SUFDbkQsV0FBVyxFQUFFLFdBQTRCO0lBQ3pDLFVBQVUsRUFBRSxzQkFBc0I7Q0FDbkMsQ0FBQyxDQUFDO0FBRUgsMENBQTBDO0FBQzFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsS0FBSyxNQUFNLEVBQUU7SUFDekQsTUFBTSxtQkFBbUIsR0FBbUM7UUFDMUQsZ0JBQWdCLEVBQUUsMkJBQTJCLFdBQVcsVUFBVTtRQUNsRSxjQUFjLEVBQUUseUJBQXlCLFdBQVcsVUFBVTtRQUM5RCxxQkFBcUIsRUFBRSxnQ0FBZ0MsV0FBVyxVQUFVO1FBQzVFLG9CQUFvQixFQUFFLCtCQUErQixXQUFXLFVBQVU7UUFDMUUsZUFBZSxFQUFFLDBCQUEwQixXQUFXLFVBQVU7UUFDaEUsa0JBQWtCLEVBQUUsNkJBQTZCLFdBQVcsVUFBVTtRQUN0RSx1QkFBdUIsRUFBRSxrQ0FBa0MsV0FBVyxVQUFVO1FBQ2hGLFNBQVMsRUFBRSxvQkFBb0IsV0FBVyxVQUFVO1FBQ3BELG9CQUFvQixFQUFFLCtCQUErQixXQUFXLFVBQVU7UUFDMUUsa0JBQWtCLEVBQUUsNkJBQTZCLFdBQVcsVUFBVTtRQUN0RSxXQUFXLEVBQUUsc0JBQXNCLFdBQVcsVUFBVTtRQUN4RCxVQUFVLEVBQUUscUJBQXFCLFdBQVcsVUFBVTtRQUN0RCxxQkFBcUIsRUFBRSxnQ0FBZ0MsV0FBVyxVQUFVO1FBQzVFLGFBQWEsRUFBRSx3QkFBd0IsV0FBVyxVQUFVO1FBQzVELGNBQWMsRUFBRSx5QkFBeUIsV0FBVyxVQUFVO1FBQzlELHVCQUF1QixFQUFFLGtDQUFrQyxXQUFXLFVBQVU7UUFDaEYsaUJBQWlCLEVBQUUsNEJBQTRCLFdBQVcsVUFBVTtRQUNwRSxPQUFPLEVBQUUsa0JBQWtCLFdBQVcsVUFBVTtRQUNoRCwwQkFBMEIsRUFBRSxxQ0FBcUMsV0FBVyxVQUFVO1FBQ3RGLHdCQUF3QixFQUFFLG1DQUFtQyxXQUFXLFVBQVU7UUFDbEYsaUJBQWlCLEVBQUUsNEJBQTRCLFdBQVcsVUFBVTtLQUNyRSxDQUFDO0lBRUYsTUFBTSxlQUFlLEdBQUcsSUFBSSxrREFBc0IsQ0FBQyxHQUFHLEVBQUUsMEJBQTBCLFdBQVcsRUFBRSxFQUFFO1FBQy9GLEdBQUcsRUFBRSxNQUFNLENBQUMsV0FBa0MsQ0FBQyxDQUFDLEdBQUc7UUFDbkQsTUFBTSxFQUFFLE1BQU0sQ0FBQyxXQUFrQyxDQUFDLENBQUMsTUFBTTtRQUN6RCxZQUFZLEVBQUUsTUFBTSxDQUFDLFdBQWtDLENBQUMsQ0FBQyxZQUFZO1FBQ3JFLFdBQVc7UUFDWCxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsdUJBQXVCO1FBQ3ZELG1CQUFtQjtRQUNuQixrQkFBa0IsRUFBRSx5QkFBeUIsV0FBVyxVQUFVO0tBQ25FLENBQUMsQ0FBQztJQUVILGVBQWUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7Q0FDOUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5pbXBvcnQgJ3NvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3Rlcic7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgRGV2VG9vbHNTdGFjayB9IGZyb20gJy4uL2xpYi9kZXYtdG9vbHMtc3RhY2snO1xuaW1wb3J0IHsgQ2VydGlmaWNhdGVTdGFjayB9IGZyb20gJy4uL2xpYi9jZXJ0aWZpY2F0ZS1zdGFjayc7XG5pbXBvcnQgeyBHaXRIdWJBY3Rpb25zU3RhY2sgfSBmcm9tICcuLi9saWIvZ2l0aHViLWFjdGlvbnMtc3RhY2snO1xuaW1wb3J0IHsgTXVsdGlDbG91ZFJvdXRpbmdTdGFjayB9IGZyb20gJy4uL2xpYi9tdWx0aS1jbG91ZC1yb3V0aW5nLXN0YWNrJztcblxuY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcblxuY29uc3QgZW52aXJvbm1lbnQgPSBhcHAubm9kZS50cnlHZXRDb250ZXh0KCdlbnZpcm9ubWVudCcpIHx8ICdkZXYnO1xuXG5jb25zdCBjb25maWcgPSB7XG4gIGRldjoge1xuICAgIGRvbWFpbjogJ2Rldi5kZXZ0b29scy5zaXRlJyxcbiAgICBob3N0ZWRab25lSWQ6ICdaMTAxNzI0NTNCSTJXUFI5TjJIMzYnLFxuICAgIGVudjoge1xuICAgICAgcmVnaW9uOiAnYXAtbm9ydGhlYXN0LTEnXG4gICAgfVxuICB9LFxuICBwcmQ6IHtcbiAgICBkb21haW46ICdkZXZ0b29scy5zaXRlJywgXG4gICAgaG9zdGVkWm9uZUlkOiAnWjA3Nzc0MDkzUjJXN0FCOTdQMjFDJyxcbiAgICBlbnY6IHtcbiAgICAgIHJlZ2lvbjogJ2FwLW5vcnRoZWFzdC0xJ1xuICAgIH1cbiAgfVxufTtcblxuLy8gQ2VydGlmaWNhdGUgc3RhY2sgaW4gdXMtZWFzdC0xIGZvciBDbG91ZEZyb250XG5jb25zdCBjZXJ0aWZpY2F0ZVN0YWNrID0gbmV3IENlcnRpZmljYXRlU3RhY2soYXBwLCBgQ2VydGlmaWNhdGVTdGFjay0ke2Vudmlyb25tZW50fWAsIHtcbiAgZW52OiB7IHJlZ2lvbjogJ3VzLWVhc3QtMScgfSxcbiAgZG9tYWluOiBjb25maWdbZW52aXJvbm1lbnQgYXMga2V5b2YgdHlwZW9mIGNvbmZpZ10uZG9tYWluLFxuICBob3N0ZWRab25lSWQ6IGNvbmZpZ1tlbnZpcm9ubWVudCBhcyBrZXlvZiB0eXBlb2YgY29uZmlnXS5ob3N0ZWRab25lSWRcbn0pO1xuXG4vLyBNYWluIHN0YWNrIHdpdGggYXBwbGljYXRpb24gcmVzb3VyY2VzXG5jb25zdCBkZXZUb29sc1N0YWNrID0gbmV3IERldlRvb2xzU3RhY2soYXBwLCBgRGV2VG9vbHNTdGFjay0ke2Vudmlyb25tZW50fWAsIHtcbiAgZW52OiBjb25maWdbZW52aXJvbm1lbnQgYXMga2V5b2YgdHlwZW9mIGNvbmZpZ10uZW52LFxuICBkb21haW46IGNvbmZpZ1tlbnZpcm9ubWVudCBhcyBrZXlvZiB0eXBlb2YgY29uZmlnXS5kb21haW4sXG4gIGhvc3RlZFpvbmVJZDogY29uZmlnW2Vudmlyb25tZW50IGFzIGtleW9mIHR5cGVvZiBjb25maWddLmhvc3RlZFpvbmVJZCxcbiAgY2VydGlmaWNhdGVBcm46IGNlcnRpZmljYXRlU3RhY2suY2VydGlmaWNhdGUuY2VydGlmaWNhdGVBcm4sXG4gIGVudmlyb25tZW50LFxuICBjcm9zc1JlZ2lvblJlZmVyZW5jZXM6IHRydWVcbn0pO1xuXG5kZXZUb29sc1N0YWNrLmFkZERlcGVuZGVuY3koY2VydGlmaWNhdGVTdGFjayk7XG5cbi8vIEdpdEh1YiBBY3Rpb25zIElBTSBTdGFja1xuY29uc3QgZ2l0aHViQWN0aW9uc1N0YWNrID0gbmV3IEdpdEh1YkFjdGlvbnNTdGFjayhhcHAsIGBHaXRIdWJBY3Rpb25zU3RhY2stJHtlbnZpcm9ubWVudH1gLCB7XG4gIGVudjogY29uZmlnW2Vudmlyb25tZW50IGFzIGtleW9mIHR5cGVvZiBjb25maWddLmVudixcbiAgZW52aXJvbm1lbnQ6IGVudmlyb25tZW50IGFzICdkZXYnIHwgJ3ByZCcsXG4gIGdpdGh1YlJlcG86ICdrdGVyL2Rldi10b29scy1zdWl0ZSdcbn0pO1xuXG4vLyBNdWx0aS1DbG91ZCBSb3V0aW5nIFN0YWNrIChjb25kaXRpb25hbClcbmlmIChhcHAubm9kZS50cnlHZXRDb250ZXh0KCdkZXBsb3lNdWx0aUNsb3VkJykgPT09ICd0cnVlJykge1xuICBjb25zdCBmaXJlYmFzZUhvc3RpbmdVcmxzOiB7IFt0b29sTmFtZTogc3RyaW5nXTogc3RyaW5nIH0gPSB7XG4gICAgJ2hhc2gtZ2VuZXJhdG9yJzogYGRldnRvb2xzLWhhc2gtZ2VuZXJhdG9yLSR7ZW52aXJvbm1lbnR9LndlYi5hcHBgLFxuICAgICdxci1nZW5lcmF0b3InOiBgZGV2dG9vbHMtcXItZ2VuZXJhdG9yLSR7ZW52aXJvbm1lbnR9LndlYi5hcHBgLFxuICAgICd1bml4LXRpbWUtY29udmVydGVyJzogYGRldnRvb2xzLXVuaXgtdGltZS1jb252ZXJ0ZXItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ3Bhc3N3b3JkLWdlbmVyYXRvcic6IGBkZXZ0b29scy1wYXNzd29yZC1nZW5lcmF0b3ItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ2lwLWNhbGN1bGF0b3InOiBgZGV2dG9vbHMtaXAtY2FsY3VsYXRvci0ke2Vudmlyb25tZW50fS53ZWIuYXBwYCxcbiAgICAnbWFya2Rvd24tcHJldmlldyc6IGBkZXZ0b29scy1tYXJrZG93bi1wcmV2aWV3LSR7ZW52aXJvbm1lbnR9LndlYi5hcHBgLFxuICAgICdwbGFjZWhvbGRlci1nZW5lcmF0b3InOiBgZGV2dG9vbHMtcGxhY2Vob2xkZXItZ2VuZXJhdG9yLSR7ZW52aXJvbm1lbnR9LndlYi5hcHBgLFxuICAgICdpcC1pbmZvJzogYGRldnRvb2xzLWlwLWluZm8tJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ3RpbWV6b25lLWNvbnZlcnRlcic6IGBkZXZ0b29scy10aW1lem9uZS1jb252ZXJ0ZXItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ3N0cmluZy1jb252ZXJ0ZXInOiBgZGV2dG9vbHMtc3RyaW5nLWNvbnZlcnRlci0ke2Vudmlyb25tZW50fS53ZWIuYXBwYCxcbiAgICAnY29kZS1kaWZmJzogYGRldnRvb2xzLWNvZGUtZGlmZi0ke2Vudmlyb25tZW50fS53ZWIuYXBwYCxcbiAgICAnbWljLXRlc3QnOiBgZGV2dG9vbHMtbWljLXRlc3QtJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ2pzb24teWFtbC1jb252ZXJ0ZXInOiBgZGV2dG9vbHMtanNvbi15YW1sLWNvbnZlcnRlci0ke2Vudmlyb25tZW50fS53ZWIuYXBwYCxcbiAgICAnand0LWRlY29kZXInOiBgZGV2dG9vbHMtand0LWRlY29kZXItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ3JlZ2V4LXRlc3Rlcic6IGBkZXZ0b29scy1yZWdleC10ZXN0ZXItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ2xvcmVtLWlwc3VtLWdlbmVyYXRvcic6IGBkZXZ0b29scy1sb3JlbS1pcHN1bS1nZW5lcmF0b3ItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ2ltYWdlLWNvbnZlcnRlcic6IGBkZXZ0b29scy1pbWFnZS1jb252ZXJ0ZXItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ3RpbWVyJzogYGRldnRvb2xzLXRpbWVyLSR7ZW52aXJvbm1lbnR9LndlYi5hcHBgLFxuICAgICdjaGFyYWN0ZXItY29kZS1jb252ZXJ0ZXInOiBgZGV2dG9vbHMtY2hhcmFjdGVyLWNvZGUtY29udmVydGVyLSR7ZW52aXJvbm1lbnR9LndlYi5hcHBgLFxuICAgICdiYWRnZXItaW1hZ2UtZ2VuZXJhdG9yJzogYGRldnRvb2xzLWJhZGdlci1pbWFnZS1nZW5lcmF0b3ItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGAsXG4gICAgJ3Bvc3Rlci1zcGxpdHRlcic6IGBkZXZ0b29scy1wb3N0ZXItc3BsaXR0ZXItJHtlbnZpcm9ubWVudH0ud2ViLmFwcGBcbiAgfTtcblxuICBjb25zdCBtdWx0aUNsb3VkU3RhY2sgPSBuZXcgTXVsdGlDbG91ZFJvdXRpbmdTdGFjayhhcHAsIGBNdWx0aUNsb3VkUm91dGluZ1N0YWNrLSR7ZW52aXJvbm1lbnR9YCwge1xuICAgIGVudjogY29uZmlnW2Vudmlyb25tZW50IGFzIGtleW9mIHR5cGVvZiBjb25maWddLmVudixcbiAgICBkb21haW46IGNvbmZpZ1tlbnZpcm9ubWVudCBhcyBrZXlvZiB0eXBlb2YgY29uZmlnXS5kb21haW4sXG4gICAgaG9zdGVkWm9uZUlkOiBjb25maWdbZW52aXJvbm1lbnQgYXMga2V5b2YgdHlwZW9mIGNvbmZpZ10uaG9zdGVkWm9uZUlkLFxuICAgIGVudmlyb25tZW50LFxuICAgIGF3c0Rpc3RyaWJ1dGlvbnM6IGRldlRvb2xzU3RhY2suY2xvdWRGcm9udERpc3RyaWJ1dGlvbnMsXG4gICAgZmlyZWJhc2VIb3N0aW5nVXJscyxcbiAgICBmaXJlYmFzZUxhbmRpbmdVcmw6IGBkZXZ0b29scy1sYW5kaW5nLXBhZ2UtJHtlbnZpcm9ubWVudH0ud2ViLmFwcGBcbiAgfSk7XG5cbiAgbXVsdGlDbG91ZFN0YWNrLmFkZERlcGVuZGVuY3koZGV2VG9vbHNTdGFjayk7XG59Il19